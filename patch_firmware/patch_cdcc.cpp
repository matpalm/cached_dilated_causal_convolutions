#include <string>

#include "arm_math.h"
#include "daisy_patch.h"
#include "daisysp.h"

#include "block.h"
#include "rolling_cache.h"
#include "classifier.h"

using namespace daisy;
using namespace daisysp;
using namespace std;

DaisyPatch hw;
CpuLoadMeter cpu_load_meter;

size_t n = 0;

void AudioCallback(AudioHandle::InputBuffer in,
                   AudioHandle::OutputBuffer out,
                   size_t size) {

  cpu_load_meter.OnBlockStart();

  for (size_t i = 0; i < size; i++) {
    out[0][i] = in[0][i];
    out[1][i] = in[1][i];
  }

  cpu_load_meter.OnBlockEnd();

  n++;
}

void WriteArray(string msg, float* a, size_t n) {
  FixedCapStr<100> str;
  str.Append(">>>>>>> [");
  char* cstr = &msg[0];
  str.Append(cstr);
  str.Append("] n=");
  str.AppendInt(n);
  hw.seed.PrintLine(str);
  for (size_t i=0; i<n; i++) {
    str.Clear();
    str.AppendInt(i);
    str.Append(" ");
    str.AppendFloat(a[i], 5);
    hw.seed.PrintLine(str);
  }
}

void Write2DArray(string msg, float* a, size_t n, size_t m) {
  FixedCapStr<100> str;
  str.Append(">>>>>>> [");
  char* cstr = &msg[0];
  str.Append(cstr);
  str.Append("] n=");
  str.AppendInt(n);
  str.Append(" m=");
  str.AppendInt(m);
  hw.seed.PrintLine(str);
  for (size_t i=0; i<n; i++) {
    for (size_t j=0; j<m; j++) {
      str.Clear();
      str.Append(" ");
      str.AppendFloat(a[(i*m)+j], 5);
      hw.seed.Print(str);
    }
    hw.seed.PrintLine("");
  }
}

// statically define blocks

float b0_c1_kernel[4*2*4] = {-0.27090930938720703, -0.1382543444633484, -0.15905439853668213, 0.43794727325439453, -0.37483686208724976, 0.10101388394832611, 0.049279965460300446, 0.14043007791042328, -0.09832819551229477, 0.1270943135023117, -0.056752391159534454, -0.24566566944122314, -0.07231920957565308, 0.3010518252849579, -0.07162345945835114, -0.15016761422157288, -0.4178830087184906, -0.2009667009115219, 0.34295257925987244, 0.31215977668762207, 0.19680851697921753, 0.33145201206207275, 0.14108344912528992, 0.44164058566093445, 0.2648201286792755, 0.2825649380683899, 0.019472088664770126, -0.08313960582017899, 0.4924093186855316, 0.39568179845809937, 0.13687798380851746, 0.3081977367401123};
float b0_c1_bias[4] = {0.0038758530281484127, 0.053443167358636856, 0.015401354990899563, 0.09185770899057388};
float b0_c2_kernel[1*4*4] = {0.06548076122999191, 1.1071233749389648, 0.25510531663894653, -0.5767581462860107, -0.40050140023231506, 0.736594021320343, -0.3458981215953827, 0.043428897857666016, 0.7958831787109375, 0.5093417763710022, -0.7584529519081116, 0.5217781662940979, -0.6031264662742615, 0.7319111824035645, 0.44694945216178894, 0.4177195131778717};
float b0_c2_bias[4] = {0.09042016416788101, -0.0886998251080513, -0.04973556846380234, -0.003113511949777603};
Block block0(4, // kernel_size
             2, 4, // in_d, out_d
             b0_c1_kernel, b0_c1_bias, b0_c2_kernel, b0_c2_bias);

float b1_c1_kernel[4*4*8] = {-0.2620052993297577, 0.2226065993309021, 0.013054565526545048, -0.13199859857559204, 0.12994538247585297, 0.25097325444221497, 0.3077284097671509, -0.03431088104844093, 0.10717730969190598, -0.006642608903348446, 0.11603616178035736, 0.20829349756240845, -0.047043174505233765, 0.06976515054702759, -0.1047300398349762, 0.16767600178718567, 0.017685847356915474, 0.2904602587223053, -0.18312868475914001, -0.20607075095176697, -0.323279470205307, 0.17848055064678192, -0.2819797992706299, 0.19302286207675934, -0.2921498119831085, -0.004475061781704426, -0.1293981969356537, -0.3646072745323181, -0.06536748260259628, -0.08053681254386902, 0.20516742765903473, -0.2394781857728958, -0.2475385218858719, 0.026330700144171715, 0.2304130643606186, -0.17095139622688293, -0.27564293146133423, 0.0010832134867087007, 0.005782829597592354, 0.19192136824131012, -0.14737524092197418, -0.16196982562541962, -0.08241094648838043, 0.2721467614173889, -0.0648469403386116, 0.1241336464881897, 0.18751920759677887, -0.19110000133514404, 0.26872575283050537, 0.12861844897270203, 0.24188031256198883, -0.3992360532283783, 0.29199984669685364, -0.1820784956216812, -0.16764454543590546, -0.2009166032075882, 0.20589274168014526, 0.17377837002277374, -0.04421953856945038, 0.08665096759796143, 0.2241716980934143, -0.01451198197901249, 0.1470506638288498, 0.2159668654203415, -0.35053542256355286, -0.013170764781534672, 0.06243208423256874, 0.08205831795930862, 0.05333807319402695, 0.039585135877132416, 0.120297372341156, 0.24847999215126038, -0.10690782219171524, -0.16858965158462524, 0.16459929943084717, -0.06670422106981277, -0.016447702422738075, 0.16616764664649963, -0.13478155434131622, 0.24392515420913696, -0.37686261534690857, -0.08436683565378189, -0.16197381913661957, -0.010313059203326702, -0.037470556795597076, -0.07663431763648987, -0.3872675895690918, -0.21462930738925934, 0.1912737786769867, 0.3907798230648041, 0.05353620648384094, -0.25105446577072144, 0.27944090962409973, 0.28798389434814453, 0.13389049470424652, -0.16781874001026154, 0.3477918207645416, -0.2114895135164261, -0.16067850589752197, -0.23623313009738922, -0.03375233709812164, 0.08319330215454102, 0.44641730189323425, 0.0429198183119297, -0.026163004338741302, 0.3542861342430115, -0.2647300958633423, 0.06885126233100891, -0.13538402318954468, -0.15472403168678284, -0.12235608696937561, -0.3053904175758362, -0.46196192502975464, 0.25932836532592773, -0.1595851629972458, 0.28958818316459656, -0.45102643966674805, 0.12140936404466629, -0.08543036878108978, -0.003194411750882864, 0.2801346778869629, 0.17535129189491272, -0.18324542045593262, 0.03894231095910072, -0.3158661127090454, -0.3254081606864929, 0.0005214320262894034, -0.08595447242259979};
float b1_c1_bias[8] = {0.016320645809173584, 0.06045683100819588, 0.10330769419670105, -0.03987179324030876, 0.08840662240982056, 0.05321025848388672, -0.05978481099009514, 0.09672112762928009};
float b1_c2_kernel[1*8*8] = {-0.10354004800319672, -0.08950904756784439, 0.40553146600723267, 0.011694209650158882, -0.6476823687553406, -0.09521530568599701, -0.5527663826942444, 0.0484260730445385, 0.646384596824646, 0.5244739651679993, -0.20939424633979797, -0.5716955065727234, 0.7301985025405884, 0.17339195311069489, -0.6114190816879272, 0.4559378921985626, -0.0687342956662178, -0.19438248872756958, 0.18770837783813477, -0.21976761519908905, -0.5517560839653015, 0.3353227376937866, 0.587034285068512, 0.11217284947633743, 0.14160308241844177, 0.4959340989589691, -0.3871374726295471, -0.395852267742157, 0.3556560277938843, 0.20606385171413422, 0.27315962314605713, 0.41908103227615356, -0.4248325228691101, -0.05336995795369148, 0.5969173908233643, -0.42345303297042847, -0.07114797830581665, 0.4152261018753052, -0.36356738209724426, -0.3706027865409851, 0.23648177087306976, -0.5315060019493103, 0.4288899004459381, 0.5771470665931702, -0.03498660400509834, -0.1180259957909584, -0.5957417488098145, -0.33515071868896484, -0.1769811511039734, -0.14016737043857574, 0.19206048548221588, -0.1454998254776001, -0.40150222182273865, 0.5111443996429443, -0.3722805976867676, -0.22072269022464752, -0.49429020285606384, 0.14674581587314606, 0.09391669929027557, 0.5382465124130249, -0.20776817202568054, 0.08785561472177505, -0.12279573082923889, -0.03230155631899834};
float b1_c2_bias[8] = {0.052206315100193024, 0.023023243993520737, 0.048648711293935776, 0.06122324615716934, 0.0704302191734314, 0.1063673123717308, 0.0, 0.03970405086874962};
Block block1(4, // kernel_size
             4, 8, // in_d, out_d
             b1_c1_kernel, b1_c1_bias, b1_c2_kernel, b1_c2_bias);

float b2_c1_kernel[4*8*8] = {-0.030484408140182495, 0.12740279734134674, 0.24257007241249084, -0.28429707884788513, 0.20361635088920593, 0.31818118691444397, 0.027693774551153183, 0.07121029496192932, 0.0058638472110033035, -0.07058341056108475, 0.22464454174041748, 0.07402083277702332, -0.26509883999824524, 0.020069587975740433, 0.3191920816898346, 0.12207040190696716, -0.06265024095773697, -0.3102093040943146, 0.1070796549320221, -0.11655696481466293, 0.169714093208313, 0.01356605626642704, -0.0528908371925354, 0.15058431029319763, 0.03921571001410484, -0.03620615974068642, 0.29923540353775024, 0.061125192791223526, 0.11515132337808609, -0.04942796379327774, 0.06344828754663467, -0.17732489109039307, -0.11938802152872086, -0.06841593980789185, 0.045627087354660034, -0.12672282755374908, -0.017097463831305504, -0.12849237024784088, 0.17491203546524048, -0.1115172952413559, 0.35254931449890137, -0.20924419164657593, 0.054090335965156555, -0.14290796220302582, -0.012009325437247753, -0.006016600877046585, 0.15893878042697906, -0.0967235267162323, -0.14605651795864105, 0.22465845942497253, -0.04728999733924866, 0.014438986778259277, 0.13122734427452087, 0.030406594276428223, 0.12336942553520203, 0.21431007981300354, -0.17267610132694244, 0.3800089955329895, 0.17830491065979004, -0.20902900397777557, 0.24698355793952942, -0.2366088628768921, -0.11321112513542175, -0.05808539688587189, 0.15598230063915253, 0.017051342874765396, 0.27011895179748535, 0.006702578626573086, 0.16081306338310242, 0.08869056403636932, -0.003932198043912649, -0.022609710693359375, -0.08244260400533676, 0.14675550162792206, 0.17738476395606995, -0.07378935068845749, -0.019596828147768974, -0.0393577441573143, 0.30028679966926575, -0.16431401669979095, -0.16820086538791656, 0.2712332308292389, -0.07016169279813766, 0.32474783062934875, 0.14860661327838898, 0.1984483152627945, 0.1506766378879547, -0.21856755018234253, -0.24572528898715973, -0.22529467940330505, -0.14436973631381989, 0.11575136333703995, -0.17208682000637054, -0.3324662446975708, 0.09237263351678848, -0.05841827392578125, -0.17245525121688843, 0.058506742119789124, 0.01692323200404644, -0.23590706288814545, -0.26294445991516113, 0.00313237844966352, 0.03053436242043972, -0.22193944454193115, 0.09456190466880798, -0.05665891617536545, 0.10791333019733429, -0.16457690298557281, -0.011381728574633598, -0.18454186618328094, -0.05643375962972641, -0.2740316390991211, 0.09779846668243408, -0.17054644227027893, 0.06286919116973877, -0.2973043918609619, -0.044197410345077515, -0.09762799739837646, 0.2994261682033539, -0.09175613522529602, -0.15066204965114594, 0.1672898679971695, -0.011691177263855934, -0.0948522761464119, 0.16942642629146576, 0.07460623234510422, 0.10565923899412155, 0.26321491599082947, -0.02434489317238331, 0.16357432305812836, 0.02632797136902809, -0.1857723593711853, -0.22237244248390198, 0.19146965444087982, -0.1985141783952713, 0.17185047268867493, 0.007234015502035618, -0.2934802770614624, 0.12073631584644318, -0.1792263686656952, 0.01712086610496044, -0.2584918439388275, -0.09529747813940048, 0.19330178201198578, -0.0038177864626049995, -0.18974755704402924, -0.1436477154493332, -0.07385306060314178, 0.09625819325447083, -0.01840093918144703, 0.31310567259788513, -0.2558179497718811, -0.17031529545783997, -0.1782790571451187, 0.1266588568687439, -0.03269967809319496, 0.044212810695171356, 0.09096386283636093, -0.1720276027917862, 0.11014053225517273, 0.07357710599899292, -0.08001697063446045, 0.20436236262321472, -0.2867492437362671, -0.11547184735536575, -0.340813010931015, 0.34024864435195923, -0.2130105197429657, 0.22743400931358337, -0.03317943587899208, 0.20749057829380035, 0.28079351782798767, 0.09024668484926224, 0.1987280398607254, -0.12729457020759583, -0.3253418207168579, 0.04450079798698425, -0.28139907121658325, 0.12422850728034973, -0.020374149084091187, 0.08776870369911194, 0.22625604271888733, -0.13613064587116241, 0.09740146994590759, 0.21425077319145203, -0.08393402397632599, -0.1950722336769104, 0.029294395819306374, 0.22483937442302704, -0.1755637675523758, -0.07303094118833542, 0.04908359795808792, -0.23044180870056152, -0.08358962833881378, -0.16276362538337708, 0.013259333558380604, -0.11985886096954346, 0.24898868799209595, 0.43646907806396484, -0.23801466822624207, 0.18218062818050385, -0.17707641422748566, -0.30404847860336304, 0.15068696439266205, -0.2936929166316986, -0.4373199939727783, 0.4157218933105469, 0.11933863162994385, 0.06577949970960617, 0.26262983679771423, 0.15734358131885529, 0.3960574269294739, 0.36002522706985474, 0.0046459068544209, -0.3636949360370636, 0.048870012164115906, 0.3629865348339081, -0.1300809234380722, 0.1338048130273819, 0.17617535591125488, 0.18328432738780975, 0.10053595900535583, -0.1488887369632721, 0.08237844705581665, -0.45362821221351624, -0.19636963307857513, -0.17318207025527954, -0.17634540796279907, -0.234176903963089, 0.0977298840880394, 0.2362939566373825, -0.02491965889930725, 0.30465167760849, 0.077675960958004, 0.2138747125864029, 0.0982138067483902, 0.3564275801181793, -0.12592576444149017, -0.07546702772378922, -0.1206364780664444, 0.07655304670333862, 0.06352946162223816, 0.2958506643772125, -0.27658510208129883, -0.12364472448825836, -0.2201562523841858, -0.17293807864189148, -0.2430267184972763, -0.38486796617507935, -0.23865638673305511, -0.163727268576622, -0.06035200506448746, -0.06114790216088295, 0.08883406221866608, 0.4603841006755829, -0.058566417545080185};
float b2_c1_bias[8] = {0.1326608955860138, 0.14640577137470245, 0.1266285479068756, 0.06490055471658707, 0.13575473427772522, -0.04493340477347374, 0.12497783452272415, -0.03609928861260414};
float b2_c2_kernel[1*8*8] = {-0.2905970811843872, -0.2198299914598465, -0.0907418429851532, 0.2749475836753845, -0.055069535970687866, -0.11535821110010147, 0.6988826990127563, -0.39642900228500366, -0.029947010800242424, -0.33177506923675537, -0.22933483123779297, 0.4204704165458679, 0.30296650528907776, -0.2801329791545868, 0.6580169200897217, -0.23610642552375793, -0.0009271817980334163, 0.49613988399505615, -0.12023221701383591, 0.3682725131511688, -0.12344798445701599, -0.11048046499490738, 0.10053332895040512, -0.41166722774505615, 0.37147653102874756, -0.2646433115005493, -0.38420605659484863, 0.3815228044986725, 0.44923263788223267, -0.32572075724601746, -0.03965365141630173, -0.4201352894306183, -0.4490172564983368, 0.12306492030620575, -0.316398948431015, 0.048437245190143585, -0.5579049587249756, -0.5202460289001465, 0.5926743149757385, 0.3346816897392273, -0.5070008039474487, -0.10723766684532166, 0.48680031299591064, -0.010779885575175285, -0.5229061841964722, -0.5009298324584961, 0.15583287179470062, -0.5900479555130005, 0.669671893119812, 0.04127827286720276, -0.3342988193035126, -0.41333451867103577, -0.28954365849494934, 0.39657047390937805, 0.056198086589574814, 0.5954859852790833, 0.2385360300540924, -0.5630418658256531, 0.6030323505401611, -0.3746970295906067, 0.04809897392988205, 0.04906916618347168, 0.13666504621505737, -0.10758012533187866};
float b2_c2_bias[8] = {0.06174299120903015, 0.08705615997314453, 0.028995301574468613, 0.11468055844306946, 0.00017470319289714098, -0.10951841622591019, -0.04442186653614044, 0.12124801427125931};
Block block2(4, // kernel_size
             8, 8, // in_d, out_d
             b2_c1_kernel, b2_c1_bias, b2_c2_kernel, b2_c2_bias);

// statically define layer caches

float layer_0_cache_buffer[4*4*4];
RollingCache layer_0_cache(
  4, // depth
  4, // dilation
  4, // kernel size
  layer_0_cache_buffer
);

float layer_1_cache_buffer[8*16*4];
RollingCache layer_1_cache(
  8, // depth
  16, // dilation
  4, // kernel size
  layer_1_cache_buffer
);

// statically define final classifier

float classifier_weights[8*2] = {-0.2897915244102478, -0.33282187581062317, -0.27039679884910583, -0.2744576036930084, -0.7649484276771545, -0.19595928490161896, 0.3926275968551636, -0.7100998163223267, -0.5941890478134155, 0.24276958405971527, 0.061853040009737015, 0.18319617211818695, 0.7790834903717041, 0.2699425518512726, -0.3036476969718933, 0.814582109451294};
float classifier_biases[2] = {-0.10190311819314957, 0.001915664179250598};
Classifier classifier(
  8, // input_dim
  2, // output_dim
  classifier_weights,
  classifier_biases
);


void UpdateDisplay() {

  float inp[8] = {0.3, 0.1, -0.4, -0.1, 0.5, 0.9, -0.2, 0.6};
  float result[2];

  classifier.Apply(inp, result);
  WriteArray("result", result, 2);

}

int main(void) {
  hw.Init();
  hw.SetAudioBlockSize(64); // number of samples handled per callback
  hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
  hw.StartAdc();

  hw.seed.StartLog();
  cpu_load_meter.Init(hw.AudioSampleRate(), hw.AudioBlockSize());

  hw.StartAudio(AudioCallback);

  while(1) {
    hw.ProcessAllControls();
    UpdateDisplay();
  }

}

